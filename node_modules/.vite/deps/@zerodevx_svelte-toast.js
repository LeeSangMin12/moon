import "./chunk-ELKJSBLM.js";
import {
  tweened
} from "./chunk-DZXHC3SN.js";
import "./chunk-IDRWQYRN.js";
import "./chunk-3TF5FDHF.js";
import "./chunk-7RQDXF5S.js";
import "./chunk-ZFQZ7ZQJ.js";
import {
  fade,
  fly
} from "./chunk-TCVXU3UM.js";
import {
  flip
} from "./chunk-PAWDWUQ6.js";
import {
  linear
} from "./chunk-YERFD2CZ.js";
import {
  add_locations,
  animation,
  append_styles,
  check_target,
  cleanup_styles,
  clsx,
  component,
  create_ownership_validator,
  each,
  hmr,
  html,
  if_block,
  init,
  legacy_api,
  onDestroy,
  onMount,
  prop,
  set_class,
  set_style,
  set_value,
  setup_stores,
  spread_props,
  store_get,
  transition,
  validate_each_keys,
  validate_store,
  writable
} from "./chunk-Z6FRCYMM.js";
import "./chunk-U7P2NEEE.js";
import {
  append,
  comment,
  from_html
} from "./chunk-6FWEO5PY.js";
import {
  FILENAME,
  HMR,
  add_svelte_meta,
  child,
  deep_read_state,
  event,
  first_child,
  get,
  legacy_pre_effect,
  legacy_pre_effect_reset,
  mutable_source,
  pop,
  push,
  reset,
  set,
  sibling,
  strict_equals,
  template_effect,
  untrack
} from "./chunk-PFCY3FMS.js";
import "./chunk-55K7ITRW.js";
import "./chunk-HNWPC2PS.js";
import "./chunk-YBXDGRZT.js";
import "./chunk-K63UQA3V.js";
import "./chunk-HFZ37CMS.js";

// node_modules/@zerodevx/svelte-toast/dist/stores.js
var defaults = {
  duration: 4e3,
  initial: 1,
  next: 0,
  pausable: false,
  dismissable: true,
  reversed: false,
  intro: { x: 256 }
};
function createToast() {
  const { subscribe, update } = writable(new Array());
  const options = {};
  let count = 0;
  function _obj(obj) {
    return obj instanceof Object;
  }
  function _init(target = "default", opts = {}) {
    options[target] = opts;
    return options;
  }
  function push2(msg, opts) {
    const param = {
      target: "default",
      ..._obj(msg) ? (
        /** @type {SvelteToastOptions} */
        msg
      ) : { ...opts, msg }
    };
    const conf = options[param.target] || {};
    const entry = {
      ...defaults,
      ...conf,
      ...param,
      theme: { ...conf.theme, ...param.theme },
      classes: [...conf.classes || [], ...param.classes || []],
      id: ++count
    };
    update((n) => entry.reversed ? [...n, entry] : [entry, ...n]);
    return count;
  }
  function pop2(id) {
    update((n) => {
      if (!n.length || id === 0) return [];
      if (typeof id === "function") return n.filter((i) => id(i));
      if (_obj(id))
        return n.filter(
          /** @type {SvelteToastOptions[]} i */
          (i) => i.target !== id.target
        );
      const found = id || Math.max(...n.map((i) => i.id));
      return n.filter((i) => i.id !== found);
    });
  }
  function set2(id, opts) {
    const param = _obj(id) ? id : { ...opts, id };
    update((n) => {
      const idx = n.findIndex((i) => i.id === param.id);
      if (idx > -1) {
        n[idx] = { ...n[idx], ...param };
      }
      return n;
    });
  }
  return { subscribe, push: push2, pop: pop2, set: set2, _init };
}
var toast = createToast();

// node_modules/@zerodevx/svelte-toast/dist/ToastItem.svelte
ToastItem[FILENAME] = "node_modules/@zerodevx/svelte-toast/dist/ToastItem.svelte";
var root_3 = add_locations(from_html(`<div class="_toastBtn pe s-FSIc2L6CiKD8" role="button" tabindex="0"></div>`), ToastItem[FILENAME], [[104, 4]]);
var root = add_locations(from_html(`<div role="status"><div><!></div> <!> <progress class="_toastBar s-FSIc2L6CiKD8"></progress></div>`), ToastItem[FILENAME], [[87, 0, [[96, 2], [114, 2]]]]);
var $$css = {
  hash: "s-FSIc2L6CiKD8",
  code: "\n._toastItem.s-FSIc2L6CiKD8 {\n  width: var(--toastWidth, 16rem);\n  height: var(--toastHeight, auto);\n  min-height: var(--toastMinHeight, 3.5rem);\n  margin: var(--toastMargin, 0 0 0.5rem 0);\n  padding: var(--toastPadding, 0);\n  background: var(--toastBackground, rgba(66, 66, 66, 0.9));\n  color: var(--toastColor, #fff);\n  box-shadow: var(\n    --toastBoxShadow,\n    0 4px 6px -1px rgba(0, 0, 0, 0.1),\n    0 2px 4px -1px rgba(0, 0, 0, 0.06)\n  );\n  border: var(--toastBorder, none);\n  border-radius: var(--toastBorderRadius, 0.125rem);\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  overflow: hidden;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n}\n._toastMsg.s-FSIc2L6CiKD8 {\n  padding: var(--toastMsgPadding, 0.75rem 0.5rem);\n  flex: 1 1 0%;\n}\n.pe.s-FSIc2L6CiKD8,\n._toastMsg.s-FSIc2L6CiKD8 a {\n  pointer-events: auto;\n}\n._toastBtn.s-FSIc2L6CiKD8 {\n  width: var(--toastBtnWidth, 2rem);\n  height: var(--toastBtnHeight, 100%);\n  cursor: pointer;\n  outline: none;\n}\n._toastBtn.s-FSIc2L6CiKD8::after {\n  content: var(--toastBtnContent, 'âœ•');\n  font: var(--toastBtnFont, 1rem sans-serif);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n._toastBar.s-FSIc2L6CiKD8 {\n  top: var(--toastBarTop, auto);\n  right: var(--toastBarRight, auto);\n  bottom: var(--toastBarBottom, 0);\n  left: var(--toastBarLeft, 0);\n  height: var(--toastBarHeight, 6px);\n  width: var(--toastBarWidth, 100%);\n  position: absolute;\n  display: block;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  border: none;\n  background: transparent;\n  pointer-events: none;\n}\n._toastBar.s-FSIc2L6CiKD8::-webkit-progress-bar {\n  background: transparent;\n}\n/* `--toastProgressBackground` renamed to `--toastBarBackground`; override included for backward compatibility */\n._toastBar.s-FSIc2L6CiKD8::-webkit-progress-value {\n  background: var(--toastProgressBackground, var(--toastBarBackground, rgba(33, 150, 243, 0.75)));\n}\n._toastBar.s-FSIc2L6CiKD8::-moz-progress-bar {\n  background: var(--toastProgressBackground, var(--toastBarBackground, rgba(33, 150, 243, 0.75)));\n}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
};
function ToastItem($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, ToastItem);
  append_styles($$anchor, $$css);
  const [$$stores, $$cleanup] = setup_stores();
  var $$ownership_validator = create_ownership_validator($$props);
  const $progress = () => (validate_store(progress, "progress"), store_get(progress, "$progress", $$stores));
  let item = prop($$props, "item", 12);
  let next = mutable_source(item().initial);
  let prev = mutable_source(get(next));
  let paused = mutable_source(false);
  let cprops = mutable_source({});
  let unlisten;
  let event2;
  const progress = tweened(item().initial, { duration: item().duration, easing: linear });
  function close(ev) {
    if (ev) event2 = ev;
    toast.pop(item().id);
  }
  function autoclose() {
    if (strict_equals($progress(), 1) || strict_equals($progress(), 0)) close();
  }
  function pause() {
    if (!get(paused) && strict_equals($progress(), get(next), false)) {
      progress.set($progress(), { duration: 0 });
      set(paused, true);
    }
  }
  function resume() {
    if (get(paused)) {
      const d = (
        /** @type {any} */
        item().duration
      );
      const duration = d - d * (($progress() - get(prev)) / (get(next) - get(prev)));
      progress.set(get(next), { duration }).then(autoclose);
      set(paused, false);
    }
  }
  function check(prop2, kind = "undefined") {
    return strict_equals(typeof prop2, kind);
  }
  function listen(d = document) {
    if (check(d.hidden)) return;
    const handler = () => d.hidden ? pause() : resume();
    const name = "visibilitychange";
    d.addEventListener(name, handler);
    unlisten = () => d.removeEventListener(name, handler);
    handler();
  }
  onMount(listen);
  onDestroy(() => {
    item().onpop && item().onpop(item().id, { event: event2 });
    unlisten && unlisten();
  });
  legacy_pre_effect(() => (get(next), deep_read_state(item()), $progress()), () => {
    if (strict_equals(get(next), item().next, false)) {
      set(next, item().next);
      set(prev, $progress());
      set(paused, false);
      progress.set(get(next)).then(autoclose);
    }
  });
  legacy_pre_effect(() => deep_read_state(item()), () => {
    if (item().component) {
      const { props = {}, sendIdTo } = item().component;
      set(cprops, { ...props, ...sendIdTo && { [sendIdTo]: item().id } });
    }
  });
  legacy_pre_effect(() => deep_read_state(item()), () => {
    if (!check(item().progress)) {
      $$ownership_validator.mutation(null, ["item", "next"], item(item().next = item().progress, true), 76, 2);
    }
  });
  legacy_pre_effect_reset();
  init();
  var div = root();
  let classes;
  var div_1 = child(div);
  let classes_1;
  var node = child(div_1);
  {
    var consequent = ($$anchor2) => {
      var fragment = comment();
      var node_1 = first_child(fragment);
      add_svelte_meta(
        () => component(node_1, () => item().component.src, ($$anchor3, $$component) => {
          $$component($$anchor3, spread_props(() => get(cprops)));
        }),
        "component",
        ToastItem,
        98,
        6,
        { componentTag: "svelte:component" }
      );
      append($$anchor2, fragment);
    };
    var alternate = ($$anchor2) => {
      var fragment_1 = comment();
      var node_2 = first_child(fragment_1);
      html(node_2, () => (deep_read_state(item()), untrack(() => item().msg)));
      append($$anchor2, fragment_1);
    };
    add_svelte_meta(
      () => if_block(node, ($$render) => {
        if (deep_read_state(item()), untrack(() => item().component)) $$render(consequent);
        else $$render(alternate, false);
      }),
      "if",
      ToastItem,
      97,
      4
    );
  }
  reset(div_1);
  var node_3 = sibling(div_1, 2);
  {
    var consequent_1 = ($$anchor2) => {
      var div_2 = root_3();
      event("click", div_2, (ev) => close(ev));
      event("keydown", div_2, (ev) => {
        if (ev instanceof KeyboardEvent && ["Enter", " "].includes(ev.key)) close(ev);
      });
      append($$anchor2, div_2);
    };
    add_svelte_meta(
      () => if_block(node_3, ($$render) => {
        if (deep_read_state(item()), untrack(() => item().dismissable)) $$render(consequent_1);
      }),
      "if",
      ToastItem,
      103,
      2
    );
  }
  var progress_1 = sibling(node_3, 2);
  reset(div);
  template_effect(
    ($0, $1) => {
      classes = set_class(div, 1, "_toastItem s-FSIc2L6CiKD8", null, classes, $0);
      classes_1 = set_class(div_1, 1, "_toastMsg s-FSIc2L6CiKD8", null, classes_1, $1);
      set_value(progress_1, $progress());
    },
    [
      () => ({ pe: item().pausable }),
      () => ({ pe: item().component })
    ]
  );
  event("mouseenter", div, () => {
    if (item().pausable) pause();
  });
  event("mouseleave", div, resume);
  append($$anchor, div);
  var $$pop = pop({ ...legacy_api() });
  $$cleanup();
  return $$pop;
}
if (import.meta.hot) {
  ToastItem = hmr(ToastItem, () => ToastItem[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-FSIc2L6CiKD8");
    module.default[HMR].source = ToastItem[HMR].source;
    set(ToastItem[HMR].source, module.default[HMR].original);
  });
}
var ToastItem_default = ToastItem;

// node_modules/@zerodevx/svelte-toast/dist/SvelteToast.svelte
SvelteToast[FILENAME] = "node_modules/@zerodevx/svelte-toast/dist/SvelteToast.svelte";
var root_1 = add_locations(from_html(`<li><!></li>`), SvelteToast[FILENAME], [[27, 4]]);
var root2 = add_locations(from_html(`<ul class="_toastContainer s-xywu5tJ7Vwft"></ul>`), SvelteToast[FILENAME], [[25, 0]]);
var $$css2 = {
  hash: "s-xywu5tJ7Vwft",
  code: "\n._toastContainer.s-xywu5tJ7Vwft {\n  top: var(--toastContainerTop, 1.5rem);\n  right: var(--toastContainerRight, 2rem);\n  bottom: var(--toastContainerBottom, auto);\n  left: var(--toastContainerLeft, auto);\n  position: fixed;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  pointer-events: none;\n  z-index: var(--toastContainerZIndex, 9999);\n}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3ZlbHRlVG9hc3Quc3ZlbHRlIiwic291cmNlcyI6WyJTdmVsdGVUb2FzdC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbmltcG9ydCB7IGZhZGUsIGZseSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJ1xuaW1wb3J0IHsgZmxpcCB9IGZyb20gJ3N2ZWx0ZS9hbmltYXRlJ1xuaW1wb3J0IHsgdG9hc3QgfSBmcm9tICcuL3N0b3Jlcy5qcydcbmltcG9ydCBUb2FzdEl0ZW0gZnJvbSAnLi9Ub2FzdEl0ZW0uc3ZlbHRlJ1xuXG4vKiogQHR5cGUge2ltcG9ydCgnLi9zdG9yZXMuanMnKS5TdmVsdGVUb2FzdE9wdGlvbnN9ICovXG5leHBvcnQgbGV0IG9wdGlvbnMgPSB7fVxuLyoqIEB0eXBlIHsoc3RyaW5nfCdkZWZhdWx0Jyl9ICovXG5leHBvcnQgbGV0IHRhcmdldCA9ICdkZWZhdWx0J1xuXG4vKiogQHR5cGUge2ltcG9ydCgnLi9zdG9yZXMuanMnKS5TdmVsdGVUb2FzdE9wdGlvbnNbXX0gKi9cbmxldCBpdGVtcyA9IFtdXG5cbi8qKiBAcGFyYW0ge09iamVjdDxzdHJpbmcsc3RyaW5nfG51bWJlcj59IFt0aGVtZV0gKi9cbmZ1bmN0aW9uIGdldENzcyh0aGVtZSkge1xuICByZXR1cm4gdGhlbWUgPyBPYmplY3Qua2V5cyh0aGVtZSkucmVkdWNlKChhLCBjKSA9PiBgJHthfSR7Y306JHt0aGVtZVtjXX07YCwgJycpIDogdW5kZWZpbmVkXG59XG5cbiQ6IHRvYXN0Ll9pbml0KHRhcmdldCwgb3B0aW9ucylcblxuJDogaXRlbXMgPSAkdG9hc3QuZmlsdGVyKChpKSA9PiBpLnRhcmdldCA9PT0gdGFyZ2V0KVxuPC9zY3JpcHQ+XG5cbjx1bCBjbGFzcz1cIl90b2FzdENvbnRhaW5lclwiPlxuICB7I2VhY2ggaXRlbXMgYXMgaXRlbSAoaXRlbS5pZCl9XG4gICAgPGxpXG4gICAgICBjbGFzcz17aXRlbS5jbGFzc2VzPy5qb2luKCcgJyl9XG4gICAgICBpbjpmbHk9e2l0ZW0uaW50cm99XG4gICAgICBvdXQ6ZmFkZVxuICAgICAgYW5pbWF0ZTpmbGlwPXt7IGR1cmF0aW9uOiAyMDAgfX1cbiAgICAgIHN0eWxlPXtnZXRDc3MoaXRlbS50aGVtZSl9XG4gICAgPlxuICAgICAgPFRvYXN0SXRlbSB7aXRlbX0gLz5cbiAgICA8L2xpPlxuICB7L2VhY2h9XG48L3VsPlxuXG48c3R5bGU+XG4uX3RvYXN0Q29udGFpbmVyIHtcbiAgdG9wOiB2YXIoLS10b2FzdENvbnRhaW5lclRvcCwgMS41cmVtKTtcbiAgcmlnaHQ6IHZhcigtLXRvYXN0Q29udGFpbmVyUmlnaHQsIDJyZW0pO1xuICBib3R0b206IHZhcigtLXRvYXN0Q29udGFpbmVyQm90dG9tLCBhdXRvKTtcbiAgbGVmdDogdmFyKC0tdG9hc3RDb250YWluZXJMZWZ0LCBhdXRvKTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHotaW5kZXg6IHZhcigtLXRvYXN0Q29udGFpbmVyWkluZGV4LCA5OTk5KTtcbn1cbjwvc3R5bGU+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQXVDQSwrQkFBZ0IsQ0FBQztBQUNqQixFQUFFLHFDQUFxQztBQUN2QyxFQUFFLHVDQUF1QztBQUN6QyxFQUFFLHlDQUF5QztBQUMzQyxFQUFFLHFDQUFxQztBQUN2QyxFQUFFLGVBQWU7QUFDakIsRUFBRSxTQUFTO0FBQ1gsRUFBRSxVQUFVO0FBQ1osRUFBRSxxQkFBcUI7QUFDdkIsRUFBRSxvQkFBb0I7QUFDdEIsRUFBRSwwQ0FBMEM7QUFDNUMiLCJpZ25vcmVMaXN0IjpbXX0= */"
};
function SvelteToast($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, SvelteToast);
  append_styles($$anchor, $$css2);
  const [$$stores, $$cleanup] = setup_stores();
  const $toast = () => (validate_store(toast, "toast"), store_get(toast, "$toast", $$stores));
  let options = prop($$props, "options", 24, () => ({}));
  let target = prop($$props, "target", 8, "default");
  let items = mutable_source([]);
  function getCss(theme) {
    return theme ? Object.keys(theme).reduce((a, c) => `${a}${c}:${theme[c]};`, "") : void 0;
  }
  legacy_pre_effect(
    () => (toast, deep_read_state(target()), deep_read_state(options())),
    () => {
      toast._init(target(), options());
    }
  );
  legacy_pre_effect(() => ($toast(), deep_read_state(target())), () => {
    set(items, $toast().filter((i) => strict_equals(i.target, target())));
  });
  legacy_pre_effect_reset();
  init();
  var ul = root2();
  validate_each_keys(() => get(items), (item) => item.id);
  add_svelte_meta(
    () => each(ul, 13, () => get(items), (item) => item.id, ($$anchor2, item) => {
      var li = root_1();
      var node = child(li);
      add_svelte_meta(
        () => ToastItem_default(node, {
          get item() {
            return get(item);
          }
        }),
        "component",
        SvelteToast,
        34,
        6,
        { componentTag: "ToastItem" }
      );
      reset(li);
      template_effect(
        ($0, $1) => {
          set_class(li, 1, $0, "s-xywu5tJ7Vwft");
          set_style(li, $1);
        },
        [
          () => clsx((get(item), untrack(() => {
            var _a;
            return (_a = get(item).classes) == null ? void 0 : _a.join(" ");
          }))),
          () => (get(item), untrack(() => getCss(get(item).theme)))
        ]
      );
      transition(1, li, () => fly, () => get(item).intro);
      transition(2, li, () => fade);
      animation(li, () => flip, () => ({ duration: 200 }));
      append($$anchor2, li);
    }),
    "each",
    SvelteToast,
    26,
    2
  );
  reset(ul);
  append($$anchor, ul);
  var $$pop = pop({ ...legacy_api() });
  $$cleanup();
  return $$pop;
}
if (import.meta.hot) {
  SvelteToast = hmr(SvelteToast, () => SvelteToast[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-xywu5tJ7Vwft");
    module.default[HMR].source = SvelteToast[HMR].source;
    set(SvelteToast[HMR].source, module.default[HMR].original);
  });
}
var SvelteToast_default = SvelteToast;
export {
  SvelteToast_default as SvelteToast,
  toast
};
//# sourceMappingURL=@zerodevx_svelte-toast.js.map
